-- Script to create PPR PL/SQL packages.

-- search_key_pkg begin
CREATE OR REPLACE PACKAGE PPR_MGR.SEARCH_KEY_PKG AS
/******************************************************************************
   NAME:       PPR_KEY
   PURPOSE: CREATE SEARCH KEY

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        2021-02-03      BBOWLES       1. Created this package.
******************************************************************************/
FUNCTION BUSINAME(BUSINESSNAME IN VARCHAR2) RETURN VARCHAR2;
FUNCTION FIRSTNAME(FIRSTNAME IN VARCHAR2) RETURN VARCHAR2;
FUNCTION LASTNAME (LASTNAME IN VARCHAR2) RETURN VARCHAR2;
FUNCTION VEHICLE(SERIALNUMBER IN VARCHAR2) RETURN VARCHAR2;
FUNCTION MHR(MHRNUMBER IN VARCHAR2) RETURN VARCHAR2;
FUNCTION AIRCRAFT(AIRCRAFTNUMBER IN VARCHAR2) RETURN VARCHAR2;

END SEARCH_KEY_PKG;


CREATE OR REPLACE PACKAGE BODY PPR_MGR.SEARCH_KEY_PKG AS

 FUNCTION BUSINAME(BUSINESSNAME IN VARCHAR2) RETURN VARCHAR2
 IS 
 V_BUS_SRCH_KEY VARCHAR2(150);
 
 BEGIN
       V_BUS_SRCH_KEY :=
       REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE
      (REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE
      (REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE
      (REGEXP_REPLACE
      (BUSINESSNAME,'^0000|^000|^00|^0|^THE | THE |\([^()]*\)','')
       ,'CORPORATION|CORP|COMPANY|CO\.|LTD|INCORPORATED|INC$|INC.|INCORPOREE|LIMITED|LIMITEE|LTEE|LTD|ASSOCIATION$|ASSOC$|ASSN$|NON PERSONAL LIABILITY$|UNLIMITED LIABILITY COMPANY|N P L$|NPL$|PARTNERSHIP|SOCIETY$|SOC$','')
       ,'BRITISH COLUMBIA|BRITISHCOLUMBIA','BC')
      ,'&','AND')
      ,'#','NUMBER')
      ,'1','ONE'),'2','TWO'),'3','THREE'),'4','FOUR'),'5','FIVE'),'6','SIX'),'7','SEVEN'),'8','EIGHT'),'9','NINE'),'0','ZERO')
      ,'TEN','ONEZERO'),'TWENTY','TWOZERO'),'THIRTY','THREEERO'),'FOURTY','FOURZERO'),'FOURTY','FOURZERO'),'FIFTY','FIVEZERO'),'SIXTY','SIXERO'),'SEVENTY','SEVENZERO'),'EIGHTY','EIGHTZERO'),'NINETY','NINEZERO')
      ,'[^0-9A-Za-z]'
      ,'',1,0,'i');
  RETURN V_BUS_SRCH_KEY;
 END;
 
 FUNCTION FIRSTNAME(FIRSTNAME IN VARCHAR2) RETURN VARCHAR2
 IS 
 V_FIRST_NAMEKEY VARCHAR2(92);
 V_FIRST_1 VARCHAR2(30);
 V_FIRST_2 VARCHAR2(30);
 V_FIRST_3 VARCHAR2(30);
 V_FIRST_4 VARCHAR2(30);
 BEGIN
  V_FIRST_4 := REGEXP_REPLACE(FIRSTNAME,'^DR |^DR.|^DR. |^MR |^MR.|^MR. |^MRS |^MRS.|^MRS. |^MS |^MS.|^MS. |^JR |^JR.|^JR. |^SR |^SR.|^SR. |[^0-9A-Za-z]',' ',1,0,'i');
  V_FIRST_1 := REGEXP_SUBSTR(V_FIRST_4, '[^ ]+');
  V_FIRST_2 := REGEXP_SUBSTR(V_FIRST_4,'[^ ]+',1,2);
  V_FIRST_3 := REGEXP_SUBSTR(V_FIRST_4,'[^ ]+',1,3);
  V_FIRST_NAMEKEY := V_FIRST_1||' '||V_FIRST_2||' '||V_FIRST_3;
  RETURN V_FIRST_NAMEKEY;
 END;
 
 FUNCTION LASTNAME(LASTNAME IN VARCHAR2) RETURN VARCHAR2
 IS 
 V_LAST_NAMEKEY VARCHAR2(50);
 V_LAST_1 VARCHAR2(50);
 V_LAST_2 VARCHAR2(50);
 V_LAST_3 VARCHAR2(50);
 BEGIN
  V_LAST_3 := REGEXP_REPLACE(LASTNAME,'^DR |^DR.|^DR. |^MR |^MR.|^MR. |^MRS |^MRS.|^MRS. |^MS |^MS.|^MS. |^JR |^JR.|^JR. |^SR |^SR.|^SR. |[^0-9A-Za-z]',' ',1,0,'i');
  V_LAST_1 := REGEXP_SUBSTR(V_LAST_3, '[^ ]+');
  V_LAST_2 := REGEXP_SUBSTR(V_LAST_3,'[^ ]+',1,2);  
  V_LAST_NAMEKEY := V_LAST_1||' '||V_LAST_2;
  RETURN V_LAST_NAMEKEY;
 END;
 
FUNCTION VEHICLE(SERIALNUMBER IN VARCHAR2) RETURN VARCHAR2
 IS 
 V_SRCHVIN   CHAR(6);
 V_SRCHVIN_1 VARCHAR2(25);
 V_SRCHVIN_2 VARCHAR2(25);
 
 BEGIN
  V_SRCHVIN_1 := REGEXP_REPLACE(SERIALNUMBER,'[^0-9A-Za-z]','',1,0,'i');
  SELECT 
    CASE
        WHEN regexp_count(V_SRCHVIN_1, '[[:digit:]]')= 0 THEN  '000000'
        WHEN regexp_count(V_SRCHVIN_1, '[[:digit:]]')= 1 THEN LPAD(SUBSTR(V_SRCHVIN_1,(regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]'))),1),6,0)
        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) BETWEEN '0' AND '9'  THEN LPAD(SUBSTR(V_SRCHVIN_1,-LEAST(LENGTH(V_SRCHVIN_1), 6)),6,'0')
        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) IN ('B','C','G','H','I','L','S','O','Y','Z') AND SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) NOT BETWEEN 'A' AND 'Z'
        THEN LPAD(SUBSTR(V_SRCHVIN_1,-LEAST(LENGTH(V_SRCHVIN_1), 6)),6,'0')
        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) NOT IN ('B','C','G','H','I','L','S','O','Y','Z') AND  SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) BETWEEN '0' AND '9' AND LENGTH(V_SRCHVIN_1) > 6
        THEN  LPAD(SUBSTR(V_SRCHVIN_1,(regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]')))-5,6),6,'0') 
        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) BETWEEN 'A' AND 'Z' AND SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) BETWEEN 'A' AND 'Z' AND LENGTH(V_SRCHVIN_1) <= 5
        THEN LPAD(REGEXP_REPLACE(V_SRCHVIN_1,'[$A-Za-z]',''),6,'0')
        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) BETWEEN 'A' AND 'Z' AND SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) NOT BETWEEN 'A' AND 'Z' AND 
        regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]')) <=5
        THEN LPAD(REGEXP_REPLACE(V_SRCHVIN_1,'[$A-Za-z]',''),6,'0')
        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) BETWEEN 'A' AND 'Z' AND SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) BETWEEN 'A' AND 'Z' AND regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]')) <=5
        THEN LPAD(SUBSTR(V_SRCHVIN_1,(regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]')))-5,5),6,0)
        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) BETWEEN 'A' AND 'Z' AND SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) BETWEEN 'A' AND 'Z' AND LENGTH(V_SRCHVIN_1) > 6
        THEN SUBSTR(V_SRCHVIN_1,(regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]')))-5,6)
        END KEY
  INTO V_SRCHVIN_2
  FROM DUAL; 
  
  V_SRCHVIN := REGEXP_REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(V_SRCHVIN_2,'I',1),'L',1),'Z',2),'H',4),'Y',4),'S',5),'C',6),'G',6),'B',8),'O',0),'[A-Za-z]','0');     
  RETURN V_SRCHVIN;
 END;
 
 FUNCTION MHR(MHRNUMBER IN VARCHAR2) RETURN VARCHAR2
 IS 
 V_SRCHVIN VARCHAR2(6);
 V_SRCHVIN_1 VARCHAR2(6);
 
 BEGIN
  V_SRCHVIN := REGEXP_REPLACE(MHRNUMBER,'[^0-9A-Za-z]','',1,0,'i');
  V_SRCHVIN_1 := LPAD(REGEXP_REPLACE(V_SRCHVIN,'[$A-Za-z]','0'),6,'0');  
  RETURN V_SRCHVIN_1; 
 END;
 
 FUNCTION AIRCRAFT(AIRCRAFTNUMBER IN VARCHAR2) RETURN VARCHAR2
 IS 
 V_SRCHVIN VARCHAR2(25);
 BEGIN
  V_SRCHVIN := REGEXP_REPLACE(AIRCRAFTNUMBER,'\s|-','');
  IF (LENGTH(V_SRCHVIN) > 6) THEN
  V_SRCHVIN := SUBSTR(V_SRCHVIN, -6);
 END IF;
  RETURN V_SRCHVIN;
 END;

END SEARCH_KEY_PKG;
-- search_key_pkg end

-- ppr_util_pkg begin
CREATE OR REPLACE PACKAGE PPR_MGR.ppr_util_pkg AS


FUNCTION SERIAL          (CRITERIA IN VARCHAR2,ACCOUNTID IN VARCHAR2,REFERENCEID IN VARCHAR2) RETURN  SEARCH_RESULT_TAB;
FUNCTION INDIVIDUAL      (LASTNAME IN VARCHAR2,FIRSTNAME IN VARCHAR2,ACCOUNTID IN VARCHAR2,REFERENCEID IN VARCHAR2) RETURN SEARCH_RESULT_tab;
FUNCTION BUSINESS        (CRITERIA IN VARCHAR2,ACCOUNTID IN VARCHAR2,REFERENCEID IN VARCHAR2) RETURN  SEARCH_RESULT_tab;
FUNCTION MHR             (CRITERIA IN VARCHAR2,ACCOUNTID IN VARCHAR2,REFERENCEID IN VARCHAR2) RETURN SEARCH_RESULT_TAB;
FUNCTION AIRCRAFT        (CRITERIA IN VARCHAR2,ACCOUNTID IN VARCHAR2,REFERENCEID IN VARCHAR2) RETURN SEARCH_RESULT_TAB; 

END ppr_util_pkg;


CREATE OR REPLACE PACKAGE BODY PPR_MGR.ppr_util_pkg AS

      
  FUNCTION SERIAL(CRITERIA IN VARCHAR2,ACCOUNTID IN VARCHAR2,REFERENCEID IN VARCHAR2) RETURN  SEARCH_RESULT_TAB
  is
      l_SEARCH_RESULT_TAB SEARCH_RESULT_TAB := SEARCH_RESULT_tab();
      n integer := 0;
      V_SEARCH_CRITERIA VARCHAR2(25);
      V_ACCOUNT_ID VARCHAR2(20);
      V_REFERENCE_ID VARCHAR2(20);
      V_KEY VARCHAR2(6);
      V_SEARCH_ID INTEGER;
      V_DATETIME  DATE;
      V_JARO NUMBER;
      PRAGMA AUTONOMOUS_TRANSACTION;
      
   begin
   
   SELECT PPR_MGR.SEARCH_ID_SEQ.NEXTVAL INTO V_SEARCH_ID FROM DUAL;
   
   SELECT SYSDATE INTO V_DATETIME FROM DUAL;
   
   V_SEARCH_CRITERIA := CRITERIA;
   
   V_ACCOUNT_ID := ACCOUNTID;

   V_REFERENCE_ID := REFERENCEID;
         
   V_KEY := SEARCH_KEY_pkg.VEHICLE(CRITERIA);
   
   V_JARO := 0;
         
   for r in 
      ( 
   SELECT *
   FROM NO_RESULT 
   LEFT JOIN(SELECT SERIAL_ID AS "RESULTID",SERIAL_TYPE_CD||';'||SERIAL_NUMBER||';'||YEAR||';'||MAKE||' '||MODEL AS "RESULT",
   (CASE
     WHEN SERIAL_NUMBER = CRITERIA THEN 'Y'
    END) AS "E"
   FROM SERIAL_COLLATERAL
   WHERE SRCH_VIN = V_KEY
   AND REGISTRATION_ID_END IS NULL
   AND SERIAL_TYPE_CD IN ('EV','MV','MH','BO','OM','TR')
   ORDER BY E,SERIAL_NUMBER
      
  )
   B ON 1 = 1
  )  
   loop
         l_SEARCH_RESULT_TAB.extend;
         n := n + 1;
         l_SEARCH_RESULT_TAB(n) := SEARCH_RESULT_OBJ(R.E,R.RESULTID,R.RESULT,V_JARO);
            
         INSERT INTO SEARCH_CLIENT(SEARCH_ID,SEARCH_TS,SEARCH_TYPE_CD,CRITERIA,ACCOUNT_ID,CLIENT_REFERENCE_ID) 
         VALUES(V_SEARCH_ID,V_DATETIME,'SS',V_SEARCH_CRITERIA,V_ACCOUNT_ID,V_REFERENCE_ID);
         
         IF R.RESULT IS NOT NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH,RESULT_ID,RESULT,JARO) 
         VALUES(V_SEARCH_ID,R.E,R.RESULTID,R.RESULT,V_JARO);
         ELSIF R.RESULT IS NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH) VALUES(V_SEARCH_ID,'N');
         END IF;
         COMMIT; 
   end loop;
        return l_SEARCH_RESULT_TAB;
   end; 
 
      FUNCTION INDIVIDUAL (LASTNAME IN VARCHAR2,FIRSTNAME IN VARCHAR2,ACCOUNTID IN VARCHAR2,REFERENCEID IN VARCHAR2) RETURN SEARCH_RESULT_tab
  
  is
      l_SEARCH_RESULT_TAB SEARCH_RESULT_tab := SEARCH_RESULT_tab();
      n integer := 0;
      V_SEARCH_CRITERIA VARCHAR2(150);
      V_ACCOUNT_ID   VARCHAR2(20);
      V_REFERENCE_ID VARCHAR2(20);
      V_LAST_NAME   VARCHAR2(50);
      V_LAST_1      VARCHAR2(50);
      V_LAST_2      VARCHAR2(50);
      V_FIRST_NAME  VARCHAR2(50);
      V_FIRST_1     VARCHAR2(50);
      V_FIRST_2     VARCHAR2(50);
      V_FIRST_3     VARCHAR2(50);
      V_SEARCH_ID   INTEGER;
      V_DATETIME    DATE;
      V_JARO        NUMBER;
      PRAGMA AUTONOMOUS_TRANSACTION;
      
      
      
  BEGIN
   
    
   SELECT PPR_MGR.SEARCH_ID_SEQ.NEXTVAL INTO V_SEARCH_ID FROM DUAL;
   
   SELECT SYSDATE INTO V_DATETIME FROM DUAL;
   
   V_SEARCH_CRITERIA := LASTNAME||' '||FIRSTNAME;
   
   V_ACCOUNT_ID := ACCOUNTID;

   V_REFERENCE_ID := REFERENCEID;
         
   V_LAST_NAME := SEARCH_KEY_pkg.LASTNAME(LASTNAME);
   V_LAST_1 := REGEXP_SUBSTR(V_LAST_NAME, '[^ ]+');
   V_LAST_2 := REGEXP_SUBSTR(V_LAST_NAME, '[^ ]+',1,2);
   
   V_FIRST_NAME := SEARCH_KEY_pkg.FIRSTNAME(FIRSTNAME);
   V_FIRST_1 := REGEXP_SUBSTR(V_LAST_NAME, '[^ ]+');
   V_FIRST_2 := REGEXP_SUBSTR(V_LAST_NAME, '[^ ]+',1,2);
   V_FIRST_3 := REGEXP_SUBSTR(V_LAST_NAME, '[^ ]+',1,2);
        
   V_JARO := 8085;  
   for r in 
      (  
   SELECT *
   FROM NO_RESULT
   LEFT JOIN(SELECT PARTY_ID AS "RESULTID",LAST_NAME||';'||FIRST_NAME||';'||MIDDLE_NAME||';'||BIRTH_DT AS "RESULT",
   (CASE
    WHEN LAST_NAME = UPPER(LASTNAME) AND FIRST_NAME = UPPER(FIRSTNAME) THEN 'Y'
    END)AS "E"
  FROM PARTY
  WHERE REGISTRATION_ID_END IS NULL
  AND UTL_MATCH.JARO_WINKLER_SIMILARITY(UPPER(LAST_NAME_KEY),UPPER(V_LAST_NAME)) >= 79
  AND (UTL_MATCH.JARO_WINKLER_SIMILARITY(UPPER(FIRST_NAME_KEY),UPPER(V_FIRST_NAME)) >= 85
  OR V_FIRST_1 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')
  OR V_FIRST_1 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_1 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR FIRST_NAME_KEY IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_NAME) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  )
  OR
  REGISTRATION_ID_END IS NULL
  AND V_LAST_1 = REGEXP_SUBSTR(LAST_NAME_KEY, '[^ ]+',1,2)
  AND (V_FIRST_1 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_1 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR FIRST_NAME_KEY IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_NAME) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  )
  OR
  REGISTRATION_ID_END IS NULL
  AND V_LAST_2 = REGEXP_SUBSTR(LAST_NAME_KEY, '[^ ]+')
  AND (V_FIRST_1 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_1 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR FIRST_NAME_KEY IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_NAME) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  )
  OR
  REGISTRATION_ID_END IS NULL
  AND V_LAST_2 = REGEXP_SUBSTR(LAST_NAME_KEY, '[^ ]+',1,2)
  AND (V_FIRST_1 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_1 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_2 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2)
  OR V_FIRST_3 = REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3)
  OR FIRST_NAME_KEY IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_NAME) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_1) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_2) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+')      IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,2) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  OR REGEXP_SUBSTR(FIRST_NAME_KEY, '[^ ]+',1,3) IN(SELECT NAME FROM NICKNAME_PPR WHERE NAME_ID IN (SELECT NAME_ID FROM NICKNAME_PPR WHERE(V_FIRST_3) = NAME))
  )
  ORDER BY E,LAST_NAME,FIRST_NAME
 ) 
 B ON 1 = 1
   )
      loop
         l_SEARCH_RESULT_TAB.extend;
         n := n + 1;
         l_SEARCH_RESULT_TAB(n) := SEARCH_RESULT_OBJ(R.E,R.RESULTID,R.RESULT,V_JARO);
         
         INSERT INTO SEARCH_CLIENT(SEARCH_ID,SEARCH_TS,SEARCH_TYPE_CD,CRITERIA,ACCOUNT_ID,CLIENT_REFERENCE_ID) 
         VALUES(V_SEARCH_ID,V_DATETIME,'IS',V_SEARCH_CRITERIA,V_ACCOUNT_ID,V_REFERENCE_ID);
         
         IF R.RESULT IS NOT NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH,RESULT_ID,RESULT,JARO) 
         VALUES(V_SEARCH_ID,R.E,R.RESULTID,R.RESULT,V_JARO);
         ELSIF R.RESULT IS NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH) VALUES(V_SEARCH_ID,'N');
         END IF;
         COMMIT;
      end loop;
      return l_SEARCH_RESULT_tab;
   end;
   
  FUNCTION BUSINESS (CRITERIA IN VARCHAR2,ACCOUNTID IN VARCHAR2,REFERENCEID IN VARCHAR2) RETURN SEARCH_RESULT_tab
  
  is
      l_SEARCH_RESULT_TAB SEARCH_RESULT_tab := SEARCH_RESULT_tab();
      n integer := 0;
      V_SEARCH_CRITERIA VARCHAR2(150);
      V_ACCOUNT_ID VARCHAR2(20);
      V_REFERENCE_ID VARCHAR2(20);
      V_SEARCH_ID INTEGER;
      V_DATETIME DATE;
      V_DESCRIPTOR VARCHAR2(30);
      V_KEY VARCHAR2(150);
      V_JARO   NUMBER;
      V_JARO_2 NUMBER;
      PRAGMA AUTONOMOUS_TRANSACTION;
     
       
  BEGIN
  
  SELECT PPR_MGR.SEARCH_ID_SEQ.NEXTVAL INTO V_SEARCH_ID FROM DUAL;
   
  SELECT SYSDATE INTO V_DATETIME FROM DUAL;
 
  SELECT MAX(JARO_VALUE) INTO V_JARO  FROM THESAURUS A, JARO  B WHERE REGEXP_LIKE(CRITERIA,WORD,'i') AND A.WORD_ID = B.WORD_ID ;
  
  V_SEARCH_CRITERIA := CRITERIA;
  
  V_ACCOUNT_ID := ACCOUNTID;

  V_REFERENCE_ID := REFERENCEID;
  
  V_JARO_2 := 85;
      
  V_KEY := SEARCH_KEY_pkg.BUSINAME(CRITERIA);
       
  IF V_JARO IS NOT NULL THEN    
   
  FOR r IN
      ( 
   SELECT *
   FROM NO_RESULT
   LEFT JOIN(SELECT PARTY_ID AS "RESULTID",BUSINESS_NAME AS "RESULT",
   (CASE
    WHEN BUSINESS_NAME = UPPER(CRITERIA) THEN 'Y'
    END)AS "E"
  FROM PARTY
  WHERE REGISTRATION_ID_END IS NULL
  AND PARTY_TYPE_CD = 'DB'
  AND UTL_MATCH.JARO_WINKLER_SIMILARITY(BUSINESS_SRCH_KEY, V_KEY) >= V_JARO
  ORDER BY E,BUSINESS_NAME
  )
  B ON 1 = 1
  )
  loop
    l_SEARCH_RESULT_TAB.extend;
         n := n + 1;
         l_SEARCH_RESULT_TAB(n) := SEARCH_RESULT_OBJ(R.E,R.RESULTID,R.RESULT,V_JARO);
         
         INSERT INTO SEARCH_CLIENT(SEARCH_ID,SEARCH_TS,SEARCH_TYPE_CD,CRITERIA,ACCOUNT_ID,CLIENT_REFERENCE_ID) 
         VALUES(V_SEARCH_ID,V_DATETIME,'BS',V_SEARCH_CRITERIA,V_ACCOUNT_ID,V_REFERENCE_ID);
         
         IF R.RESULT IS NOT NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH,RESULT_ID,RESULT,JARO) 
         VALUES(V_SEARCH_ID,R.E,R.RESULTID,R.RESULT,V_JARO);
         ELSIF R.RESULT IS NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH) VALUES(V_SEARCH_ID,'N');
         END IF;
         COMMIT;
      end loop;
    ELSIF V_JARO IS NULL THEN    
    FOR r IN
      ( 
   SELECT *
   FROM NO_RESULT
   LEFT JOIN(SELECT PARTY_ID AS "RESULTID",BUSINESS_NAME AS "RESULT",
   (CASE
    WHEN BUSINESS_NAME = UPPER(CRITERIA) THEN 'Y'
    END)AS "E"
  FROM PARTY
  WHERE REGISTRATION_ID_END IS NULL
  AND PARTY_TYPE_CD = 'DB'
  AND UTL_MATCH.JARO_WINKLER_SIMILARITY(BUSINESS_SRCH_KEY, V_KEY) >= V_JARO_2
  ORDER BY E,BUSINESS_NAME
 )
 B ON 1 = 1
   )
     loop
         l_SEARCH_RESULT_TAB.extend;
         n := n + 1;
         l_SEARCH_RESULT_TAB(n) := SEARCH_RESULT_OBJ(R.E,R.RESULTID,R.RESULT,V_JARO_2);
         
         
        IF R.RESULT IS NOT NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH,RESULT_ID,RESULT,JARO) 
         VALUES(V_SEARCH_ID,R.E,R.RESULTID,R.RESULT,V_JARO_2);
         ELSIF R.RESULT IS NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH) VALUES(V_SEARCH_ID,'N');
         END IF;
         COMMIT;
      end loop;
  END IF;
      
      
  RETURN l_SEARCH_RESULT_tab;
      
  END;
   
     FUNCTION MHR(CRITERIA IN VARCHAR2,ACCOUNTID IN VARCHAR2,REFERENCEID IN VARCHAR2) RETURN  SEARCH_RESULT_TAB
  is
      temp_name VARCHAR2(256);
      result_name VARCHAR2(30);
      candidate VARCHAR2(1);
      i NUMBER;
      l_SEARCH_RESULT_TAB SEARCH_RESULT_TAB := SEARCH_RESULT_tab();
      n integer := 0;
      V_SEARCH_CRITERIA VARCHAR2(7);
      V_KEY VARCHAR2(6);
      V_ACCOUNT_ID VARCHAR2(20);
      V_REFERENCE_ID VARCHAR2(20);
      V_SEARCH_ID INTEGER;
      V_DATETIME  DATE;
      V_JARO NUMBER;
      PRAGMA AUTONOMOUS_TRANSACTION;
      
   begin
   
   SELECT PPR_MGR.SEARCH_ID_SEQ.NEXTVAL INTO V_SEARCH_ID FROM DUAL;
   
   SELECT SYSDATE INTO V_DATETIME FROM DUAL;
   
   V_SEARCH_CRITERIA := CRITERIA;
   
   V_ACCOUNT_ID := ACCOUNTID;

   V_REFERENCE_ID := REFERENCEID;
   
   V_KEY := SEARCH_KEY_pkg.MHR(CRITERIA);
   
   V_JARO := 0;
             
   for r in 
      ( 
   SELECT *
   FROM NO_RESULT 
   LEFT JOIN(SELECT SERIAL_ID AS "RESULTID",MHR_NUMBER||';'||SERIAL_NUMBER||';'||YEAR||';'||MAKE||' '||MODEL AS "RESULT",
   (CASE
     WHEN MHR_NUMBER = CRITERIA THEN 'Y'
    END) AS "E"
   FROM SERIAL_COLLATERAL
   WHERE SRCH_VIN = V_KEY
   AND REGISTRATION_ID_END IS NULL
   ORDER BY E,MHR_NUMBER
      
  )
   B ON 1 = 1
  )  
   loop
         l_SEARCH_RESULT_TAB.extend;
         n := n + 1;
         l_SEARCH_RESULT_TAB(n) := SEARCH_RESULT_OBJ(R.E,R.RESULTID,R.RESULT,V_JARO);
         
         INSERT INTO SEARCH_CLIENT(SEARCH_ID,SEARCH_TS,SEARCH_TYPE_CD,CRITERIA,ACCOUNT_ID,CLIENT_REFERENCE_ID) 
         VALUES(V_SEARCH_ID,V_DATETIME,'MH',V_SEARCH_CRITERIA,V_ACCOUNT_ID,V_REFERENCE_ID);
         
        IF R.RESULT IS NOT NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH,RESULT_ID,RESULT,JARO) 
         VALUES(V_SEARCH_ID,R.E,R.RESULTID,R.RESULT,V_JARO);
         ELSIF R.RESULT IS NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH) VALUES(V_SEARCH_ID,'N');
         END IF;
         COMMIT; 
   end loop;
        return l_SEARCH_RESULT_TAB;
   end;
   
  FUNCTION AIRCRAFT(CRITERIA IN VARCHAR2,ACCOUNTID IN VARCHAR2,REFERENCEID IN VARCHAR2) RETURN  SEARCH_RESULT_TAB
  is
      l_SEARCH_RESULT_TAB SEARCH_RESULT_TAB := SEARCH_RESULT_tab();
      n integer := 0;
      V_SEARCH_CRITERIA VARCHAR2(25);
      V_ACCOUNT_ID VARCHAR2(20);
      V_REFERENCE_ID VARCHAR2(20); 
      V_SEARCH_ID INTEGER;
      V_KEY VARCHAR2(6);
      V_DATETIME  DATE;
      V_JARO NUMBER;
      PRAGMA AUTONOMOUS_TRANSACTION;
      
   begin
   
   SELECT PPR_MGR.SEARCH_ID_SEQ.NEXTVAL INTO V_SEARCH_ID FROM DUAL;
   
   SELECT SYSDATE INTO V_DATETIME FROM DUAL;
   
   V_SEARCH_CRITERIA := CRITERIA;
         
   V_ACCOUNT_ID := ACCOUNTID;

   V_REFERENCE_ID := REFERENCEID;
   
   V_KEY := SEARCH_KEY_pkg.AIRCRAFT(CRITERIA);
   
   V_JARO := 0;
   
   for r in 
      ( 
   SELECT *
   FROM NO_RESULT 
   LEFT JOIN(SELECT SERIAL_ID AS "RESULTID",SERIAL_NUMBER||';'||YEAR||';'||MAKE||' '||MODEL AS "RESULT",
   (CASE
     WHEN SERIAL_NUMBER = CRITERIA THEN 'Y'
    END) AS "E"
   FROM SERIAL_COLLATERAL
   WHERE SRCH_VIN = V_KEY
   AND REGISTRATION_ID_END IS NULL
   AND SERIAL_TYPE_CD IN ('AC','AF')
   ORDER BY E,SERIAL_NUMBER
      
  )
   B ON 1 = 1
  )  
   loop
         l_SEARCH_RESULT_TAB.extend;
         n := n + 1;
         l_SEARCH_RESULT_TAB(n) := SEARCH_RESULT_OBJ(R.E,R.RESULTID,R.RESULT,V_JARO);
         
         INSERT INTO SEARCH_CLIENT(SEARCH_ID,SEARCH_TS,SEARCH_TYPE_CD,CRITERIA,ACCOUNT_ID,CLIENT_REFERENCE_ID) 
         VALUES(V_SEARCH_ID,V_DATETIME,'AC',V_SEARCH_CRITERIA,V_ACCOUNT_ID,V_REFERENCE_ID);
         
         IF R.RESULT IS NOT NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH,RESULT_ID,RESULT,JARO) 
         VALUES(V_SEARCH_ID,R.E,R.RESULTID,R.RESULT,V_JARO);
         ELSIF R.RESULT IS NULL THEN
         INSERT INTO SEARCH_RESULT(SEARCH_ID,MATCH) VALUES(V_SEARCH_ID,'N');
         END IF;
         COMMIT;
   end loop;
        return l_SEARCH_RESULT_TAB;
   end; 
  
END ppr_util_pkg;
-- ppr_util_pkg end


