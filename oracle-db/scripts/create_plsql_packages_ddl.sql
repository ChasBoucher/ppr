-- Script to create PPR PL/SQL packages.

-- search_key_pkg begin
CREATE OR REPLACE PACKAGE SEARCH_KEY_PKG AS

/******************************************************************************

   NAME:       PPR_KEY

   PURPOSE: CREATE SEARCH KEY

 

   REVISIONS:

   Ver        Date        Author           Description

   ---------  ----------  ---------------  ------------------------------------

   1.0        2021-02-03      BBOWLES       1. Created this package.

******************************************************************************/

FUNCTION BUSNAMEKEY(BUSINESSNAME IN VARCHAR2) RETURN VARCHAR2;

FUNCTION FIRSTNAME(FIRSTNAME IN VARCHAR2) RETURN VARCHAR2;

FUNCTION LASTNAME (LASTNAME IN VARCHAR2) RETURN VARCHAR2;

FUNCTION VEHICLE(SERIALNUMBER IN VARCHAR2) RETURN VARCHAR2;

FUNCTION MHR(MHRNUMBER IN VARCHAR2) RETURN VARCHAR2;

FUNCTION AIRCRAFT(AIRCRAFTNUMBER IN VARCHAR2) RETURN VARCHAR2;

END SEARCH_KEY_PKG;


CREATE OR REPLACE PACKAGE BODY SEARCH_KEY_PKG AS
 
FUNCTION BUSNAMEKEY(BUSINESSNAME IN VARCHAR2) RETURN VARCHAR2

IS

 V_BUS_SRCH_KEY VARCHAR2(150);


 BEGIN

       V_BUS_SRCH_KEY :=

       REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE

      (REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE

      (REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE

      (REGEXP_REPLACE

      (BUSINESSNAME,'^0000|^000|^00|^0|^THE | THE |\([^()]*\)','')

       ,'CORPORATION|CORP|COMPANY|CO\.|LTD|INCORPORATED|INC$|INC.|INCORPOREE|LIMITED|LIMITEE|LTEE|LTD|ASSOCIATION$|ASSOC$|ASSN$|NON PERSONAL LIABILITY$|UNLIMITED LIABILITY COMPANY|N P L$|NPL$|PARTNERSHIP|SOCIETY$|SOC$','')

       ,'BRITISH COLUMBIA|BRITISHCOLUMBIA','BC')

      ,'&','AND')

      ,'#','NUMBER')

      ,'1','ONE'),'2','TWO'),'3','THREE'),'4','FOUR'),'5','FIVE'),'6','SIX'),'7','SEVEN'),'8','EIGHT'),'9','NINE'),'0','ZERO')

      ,'TEN','ONEZERO'),'TWENTY','TWOZERO'),'THIRTY','THREEERO'),'FOURTY','FOURZERO'),'FOURTY','FOURZERO'),'FIFTY','FIVEZERO'),'SIXTY','SIXERO'),'SEVENTY','SEVENZERO'),'EIGHTY','EIGHTZERO'),'NINETY','NINEZERO')

      ,'[^0-9A-Za-z]'

      ,'',1,0,'i');

  RETURN V_BUS_SRCH_KEY;

END;

  

 FUNCTION FIRSTNAME(FIRSTNAME IN VARCHAR2) RETURN VARCHAR2

IS

 V_FIRST_NAME VARCHAR2(92);

V_FIRST_1 VARCHAR2(30);

V_FIRST_2 VARCHAR2(30);

V_FIRST_3 VARCHAR2(30);

V_FIRST_4 VARCHAR2(30);

BEGIN

  V_FIRST_4 := REGEXP_REPLACE(FIRSTNAME,'^DR |^DR.|^DR. |^MR |^MR.|^MR. |^MRS |^MRS.|^MRS. |^MS |^MS.|^MS. |^JR |^JR.|^JR. |^SR |^SR.|^SR. ','',1,0,'i');

  V_FIRST_1 := REGEXP_SUBSTR(V_FIRST_4, '[^- ]+');

  V_FIRST_2 := REGEXP_SUBSTR(V_FIRST_4,'[^-|^ ]+',1,2);

  V_FIRST_3 := REGEXP_SUBSTR(V_FIRST_4,'[^-|^ ]+',1,3);

  V_FIRST_NAME := V_FIRST_1||' '||V_FIRST_2||' '||V_FIRST_3;

  RETURN V_FIRST_NAME;

END;


 FUNCTION LASTNAME(LASTNAME IN VARCHAR2) RETURN VARCHAR2

IS

 V_LAST_NAME VARCHAR2(60);

V_LAST_1 VARCHAR2(30);

V_LAST_2 VARCHAR2(30);

BEGIN

  V_LAST_1 := REGEXP_SUBSTR(LASTNAME, '[^- ]+');

  V_LAST_2 := REGEXP_REPLACE(REGEXP_REPLACE(LASTNAME,'[^-]*-'),'[^ ]* ');

  V_LAST_NAME := V_LAST_1||' '||V_LAST_2;

  RETURN V_LAST_NAME;

END;


FUNCTION VEHICLE(SERIALNUMBER IN VARCHAR2) RETURN VARCHAR2

IS

 V_SRCHVIN   CHAR(6);

V_SRCHVIN_1 VARCHAR2(25);

V_SRCHVIN_2 VARCHAR2(25);


 BEGIN

  V_SRCHVIN_1 := REGEXP_REPLACE(SERIALNUMBER,'[^0-9A-Za-z]','',1,0,'i');

  SELECT

    CASE

        WHEN regexp_count(V_SRCHVIN_1, '[[:digit:]]')= 0 THEN  '000000'

        WHEN regexp_count(V_SRCHVIN_1, '[[:digit:]]')= 1 THEN LPAD(SUBSTR(V_SRCHVIN_1,(regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]'))),1),6,0)
        
        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) BETWEEN '0' AND '9'  THEN LPAD(SUBSTR(V_SRCHVIN_1,-LEAST(LENGTH(V_SRCHVIN_1), 6)),6,'0')

        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) IN ('B','C','G','H','I','L','S','O','Y','Z') AND SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) NOT BETWEEN 'A' AND 'Z'

        THEN LPAD(SUBSTR(V_SRCHVIN_1,-LEAST(LENGTH(V_SRCHVIN_1), 6)),6,'0')

        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) NOT IN ('B','C','G','H','I','L','S','O','Y','Z') AND  SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) BETWEEN '0' AND '9' AND LENGTH(V_SRCHVIN_1) > 6

        THEN  LPAD(SUBSTR(V_SRCHVIN_1,(regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]')))-5,6),6,'0')

        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) BETWEEN 'A' AND 'Z' AND SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) BETWEEN 'A' AND 'Z' AND LENGTH(V_SRCHVIN_1) <= 5

        THEN LPAD(REGEXP_REPLACE(V_SRCHVIN_1,'[$A-Za-z]',''),6,'0')

        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) BETWEEN 'A' AND 'Z' AND SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) NOT BETWEEN 'A' AND 'Z' AND

        regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]')) <=5

        THEN LPAD(REGEXP_REPLACE(V_SRCHVIN_1,'[$A-Za-z]',''),6,'0')

        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) BETWEEN 'A' AND 'Z' AND SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) BETWEEN 'A' AND 'Z' AND regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]')) <=5

        THEN LPAD(SUBSTR(V_SRCHVIN_1,(regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]')))-5,5),6,0)

        WHEN SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1),1) BETWEEN 'A' AND 'Z' AND SUBSTR(V_SRCHVIN_1,LENGTH(V_SRCHVIN_1)-1,1) BETWEEN 'A' AND 'Z' AND LENGTH(V_SRCHVIN_1) > 6

        THEN SUBSTR(V_SRCHVIN_1,(regexp_instr(V_SRCHVIN_1,'[[:digit:]]',1,regexp_count(V_SRCHVIN_1, '[[:digit:]]')))-5,6)

        END KEY

  INTO V_SRCHVIN_2

  FROM DUAL;

  

  V_SRCHVIN := REGEXP_REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(V_SRCHVIN_2,'I',1),'L',1),'Z',2),'H',4),'Y',4),'S',5),'C',6),'G',6),'B',8),'O',0),'[A-Za-z]','0');    

  RETURN V_SRCHVIN;

END;


 FUNCTION MHR(MHRNUMBER IN VARCHAR2) RETURN VARCHAR2

IS

 V_SRCHVIN VARCHAR2(7);

BEGIN

  V_SRCHVIN := REGEXP_REPLACE(MHRNUMBER,'^0000|^000|^00|^0|\s','');
  IF (LENGTH(V_SRCHVIN) > 6) THEN
    V_SRCHVIN := SUBSTR(V_SRCHVIN, -6);
  END IF;

  RETURN V_SRCHVIN;

 END;


 FUNCTION AIRCRAFT(AIRCRAFTNUMBER IN VARCHAR2) RETURN VARCHAR2

IS

 V_SRCHVIN VARCHAR2(30);

BEGIN

  V_SRCHVIN := REGEXP_REPLACE(AIRCRAFTNUMBER,'\s|-','');
  IF (LENGTH(V_SRCHVIN) > 6) THEN
    V_SRCHVIN := SUBSTR(V_SRCHVIN, -6);
  END IF;

  RETURN V_SRCHVIN;

END;

END SEARCH_KEY_PKG;
-- search_key_pkg end

